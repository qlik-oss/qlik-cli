<?xml version="1.0" encoding="utf-8"?>
<!-- Do not remove this test for UTF-8: if “Ω” doesn’t appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. -->
<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
  <metadata>
    <id>qlik-cli</id>
    <version>2.6.0</version>
    <projectUrl>https://github.com/qlik-oss/qlik-cli</projectUrl>
    <packageSourceUrl>https://github.com/qlik-oss/qlik-cli/blob/master/choco</packageSourceUrl>
    <owners>QlikDevToolkit</owners>
    <title>qlik CLI</title>
    <authors>Qliktech International AB</authors>
    <!-- Some of these will have to be added after the project is open-source -->
    <iconUrl>https://qlik-oss.github.io/qlik-cli.github.io/icons/qlik-cli.png</iconUrl>
    <licenseUrl>https://github.com/qlik-oss/qlik-cli/blob/master/LICENSE</licenseUrl>
    <!--<projectSourceUrl>Software Source Location - is the software FOSS somewhere? Link to it with this</projectSourceUrl>-->
    <docsUrl>https://qlik.dev/libraries-and-tools/qlik-cli</docsUrl>
    <!--<mailingListUrl></mailingListUrl>-->
    <bugTrackerUrl>https://github.com/qlik-oss/qlik-cli/issues</bugTrackerUrl>
    <tags>qlik-cli</tags>
    <summary>qlik is a tool for working with any of Qlik Sense SaaS</summary>
    <description>qlik is a Command Line Interface for Qlik Sense SaaS.

It gives you access to most public APIs which enables you to administrate your tenant and apps,
develop and manage apps, migrate data and much more.</description>
    <releaseNotes>
## Release notes

- New: Added `qlik edit` command - you can now easily update resources without worrying about 
the complicated JSON Patch calculations, based on the `EDITOR` environment variable, the edit 
command will start automatically your preferred editor and once you changes are saved, will 
do all the PUT/PATCH work for you.
    *If you want to see communication details for your edit call you can use the `--verbose` 
    flag. This will display all HTTP operations that are performed including payloads for requests.*
    example:
    ```bash
    qlik webhook edit &lt;webhookId&gt;
    # this command will launch your preferred editor containing the resource in json format
    # changing for example the description parameter and save will be the equivalent of doing 
    # a patch with payload:
    # [
    #   {
    #       "op": "replace",
    #       "path": "/description",
    #       "value": "my new description"
    #   }
    # ]
    ```
- New: Added `qlik spec get` provides more detailed information about added external specs, most notably the path to the added specification.
- New: The auto-generated usage documentation now get automatically published to https://qlik.dev/libraries-and-tools/qlik-cli upon new releases.
- Fix: Improved robustness in handling of array subtypes - missing types will now return errors. Any included schema is thus required to have proper types defined. Previously, we defaulted to string if the type was missing.
    </releaseNotes>
  </metadata>
  <files>
    <file src="tools\**" target="tools" />
    <!--Building from Linux? You may need this instead: <file src="tools/**" target="tools" />-->
  </files>
</package>
